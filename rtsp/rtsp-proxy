#!/bin/bash

SERVER_LISTEN_PORT=${SERVER_LISTEN_PORT:-554}
SERVER_LISTEN_HOST=${SERVER_LISTEN_HOST:-0.0.0.0}
CAMERA_IP=${CAMERA_IP:?"missing CAMERA_IP"}
CAMERA_PORT=${CAMERA_PORT:-554}

start_server () {
  local listen_port=$1
  socat -d -d TCP-LISTEN:"$listen_port",bind="$SERVER_LISTEN_HOST",fork SYSTEM:"$0 worker"
}

worker_cleanup () {
  rm -rf "$TMP"
}

worker () {
  TMP=$(mktemp -d)
  trap worker_cleanup EXIT

  local requests=$TMP/requests
  local raw_responses=$TMP/raw_responses
  local modified_responses=$TMP/modified_responses

  mkfifo "$requests" "$raw_responses" "$modified_responses"

  socat -d -d PIPE:"$requests"'!!'PIPE:"$raw_responses" TCP:"$CAMERA_IP:$CAMERA_PORT" &
  socat -d -d PIPE:"$raw_responses"'!!'PIPE:"$modified_responses" SYSTEM:"$0 handle-responses" &
  socat -d -d - PIPE:"$modified_responses"',nonblock!!'PIPE:"$requests"
}

handle_responses () {
  local char input_line rest_of_line
  while LANG=C IFS='' read -r -d '' -n 1 char; do
    if [[ "$char" == "$" ]]; then
      echo "[$BASHPID] rtp stream started" >&2
      echo -n "$"
      exec cat
    else
      input_line=$char
      IFS='' read -r rest_of_line
      input_line+=$rest_of_line
      rewrite <<< "$input_line"
    fi
  done
}

rewrite () {
  local script
  IFS='' read -r -d '' script <<EOF
    /^Transport:/ {
      s/,ssrc=/\;ssrc=/
      s/;source[^\;]\+//
    }
EOF
  sed -u "$script"
}

if [ "$1" == "worker" ]; then
  worker
elif [ "$1" == "handle-responses" ]; then
  handle_responses
else
  echo "Starting rtsp server on port $SERVER_LISTEN_PORT"
  start_server "$SERVER_LISTEN_PORT"
fi
