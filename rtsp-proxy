#!/bin/bash

SERVER_LISTEN_PORT=${SERVER_LISTEN_PORT:-554}
SERVER_LISTEN_ADDRESS=${SERVER_LISTEN_ADDRESS:-0.0.0.0}
CAMERA_IP=${CAMERA_IP:?"missing CAMERA_IP"}
CAMERA_PORT=${CAMERA_PORT:-8080}

start_server () {
  local listen_port=$1
  socat -d -d TCP-LISTEN:"$listen_port",bind="$SERVER_LISTEN_ADDRESS",fork SYSTEM:"$0"' worker'
}

worker_cleanup () {
  rm -rf "$TMP"
}

worker () {
  TMP=$(mktemp -d)
  trap worker_cleanup EXIT

  local requests=$TMP/requests
  local raw_responses=$TMP/raw_responses
  local modified_responses=$TMP/modified_responses

  mkfifo "$requests" "$raw_responses" "$modified_responses"

  socat -d -d PIPE:"$requests"'!!'PIPE:"$raw_responses",unlink-close TCP:"$CAMERA_IP:$CAMERA_PORT" &
  socat -d -d PIPE:"$raw_responses"'!!'PIPE:"$modified_responses",unlink-close SYSTEM:"$0 rewrite" &
  cat > "$requests" &
  cat "$modified_responses"
}

rewrite () {
  exec sed -u 's/,ssrc=/\;ssrc=/'
}

if [ "$1" == "worker" ]; then
  worker
elif [ "$1" == "rewrite" ]; then
  rewrite
else
  echo "Starting rtsp server on port $SERVER_LISTEN_PORT"
  start_server "$SERVER_LISTEN_PORT"
fi
